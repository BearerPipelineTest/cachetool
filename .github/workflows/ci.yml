name: ci

on:
  push:
    branches:
      - "*"
    tags:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  test:
    runs-on: ${{ matrix.operating-system }}
    continue-on-error: ${{ matrix.allow-failure }}
    strategy:
      max-parallel: 15
      matrix:
        operating-system: [ubuntu-20.04, macos-10.15, macos-11]
        php-version: ["8.0", "8.1"]
        allow-failure: [false]
        include:
          - php-version: 8.2
            operating-system: ubuntu-20.04
            allow-failure: true
          - php-version: 8.2
            operating-system: macos-10.15
            allow-failure: true
          - php-version: 8.2
            operating-system: macos-11
            allow-failure: true
    name: Test PHP ${{ matrix.php-version }} on ${{ matrix.operating-system }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: ${{ matrix.php-version }}
          extensions: apcu, mbstring, pcov
          ini-values: apc.enabled=1, apc.enable_cli=1, opcache.enable=1, opcache.enable_cli=1, opcache.jit=disable
          coverage: pcov

      - name: Check PHP Version
        run: php -v

      - name: Check Composer Version
        run: composer -V

      - name: Check PHP Extensions
        run: php -m

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.json') }}
          restore-keys: ${{ runner.os }}-composer-${{ hashFiles('composer.json') }}

      - name: Install Dependencies
        run: composer install --prefer-dist

      - name: Run test suite
        run: $(composer config bin-dir)/phpunit --coverage-clover=coverage.clover

      - name: Upload coverage to coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          wget https://github.com/php-coveralls/php-coveralls/releases/download/v2.4.3/php-coveralls.phar
          php php-coveralls.phar --coverage_clover=coverage.clover --json_path=coveralls-upload.json -v

  release:
    runs-on: ubuntu-20.04
    name: Create & Publish Release
    if: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags') }}
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get tag & commit hash
        id: info
        run: |
          echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
          echo ::set-output name=COMMIT_SHA::$(git rev-parse --short HEAD)
          echo ::set-output name=BUILD_DATE::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.0

      - name: Install Dependencies
        run: |
          composer global config minimum-stability dev
          composer global config prefer-stable true
          composer global require humbug/box
          composer install --prefer-dist --no-dev

      - name: Create Release Assets
        run: |
          jq '. + {compression: "GZ", output: "cachetool.phar.gz"}' box.json > box.gz.json
          jq '. + {compression: "BZ2", output: "cachetool.phar.bz2"}' box.json > box.bz2.json
          $(composer config home)/vendor/bin/box compile --config=box.json
          $(composer config home)/vendor/bin/box compile --config=box.gz.json
          $(composer config home)/vendor/bin/box compile --config=box.bz2.json

      - name: Build & tag image
        uses: docker/build-push-action@v2
        with:
          build-args: |
            BUILD_DATE=${{ steps.info.outputs.BUILD_DATE }}
            CACHETOOL_VERSION=${{ steps.info.outputs.VERSION }}
            COMMIT_SHA=${{ steps.info.outputs.COMMIT_SHA }}
            PHP_VERSION=8.0
          context: .
          load: true
          push: false
          tags: |
            gordalina/cachetool:latest
            gordalina/cachetool:${{ steps.info.outputs.VERSION }}
            ghcr.io/gordalina/cachetool:latest
            ghcr.io/gordalina/cachetool:${{ steps.info.outputs.VERSION }}

      - name: Push images
        run: docker push gordalina/cachetool:${{ steps.info.outputs.VERSION }}
          docker push ghcr.io/gordalina/cachetool:${{ steps.info.outputs.VERSION }}

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ steps.info.outputs.VERSION }}
          tag_name: ${{ steps.info.outputs.VERSION }}
          draft: false
          prerelease: ${{ contains(github.ref, '-') }}
          files: |
            cachetool.phar
            cachetool.phar.gz
            cachetool.phar.bz2
            CHANGELOG.md
            LICENSE
          body: |
            ## Changelog
            The full changelog can be found in our [changelog file](https://github.com/gordalina/cachetool/blob/${{ steps.info.outputs.VERSION }}/CHANGELOG.md)

      - name: Update GitHub Pages
        if: ${{ !contains(github.ref, '-') }}
        run: |
          REF="${{ github.ref }}"
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          bin/update-gh-pages.sh ${{ steps.info.outputs.VERSION }}

      - name: Push latest images
        if: ${{ !contains(github.ref, '-') }}
        run: |
          docker push gordalina/cachetool:latest
          docker push ghcr.io/gordalina/cachetool:latest
